<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  	<!-- Redis 설정 -->
    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" lazy-init="false"
        p:maxActive="${redis.maxActive}"
        p:maxIdle="${redis.maxIdle}"
        p:minIdle="${redis.minIdle}"
        p:maxWait="${redis.maxWait}"
        p:testOnBorrow="${redis.testOnBorrow}"
        p:testOnReturn="${redis.testOnReturn}"
        p:testWhileIdle="${redis.testWhileIdle}"
        p:whenExhaustedAction="${redis.whenExhaustedAction}"
        p:timeBetweenEvictionRunsMillis="${redis.timeBetweenEvictionRunsMillis}"
        p:numTestsPerEvictionRun="${redis.numTestsPerEvictionRun}"
        p:softMinEvictableIdleTimeMillis="${redis.softMinEvictableIdleTimeMillis}"
        p:minEvictableIdleTimeMillis="${redis.minEvictableIdleTimeMillis}" />

  	
 	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
 		p:host-name="${redis.host}" p:port="${redis.port}" p:use-pool="${redis.use.pool}" p:timeout="${redis.timeout}" p:poolConfig-ref="redisPoolConfig" />

 	<!-- redis template definition -->
  	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
    	p:connection-factory-ref="jedisConnectionFactory"/>
</beans>
